const path = require('path');
const AudioAnalyzer = require('./audio_analyzer');

async function main() {
    try {
        // –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –∞—É–¥–∏–æ —Ñ–∞–π–ª—É –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∞–π–ª –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        const audioFilePath = process.argv[2] || path.join(__dirname, '..', 'CAR0004.mp3');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        if (!require('fs').existsSync(audioFilePath)) {
            console.error('‚ùå –û—à–∏–±–∫–∞: –ê—É–¥–∏–æ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω');
            console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node index.js [–ø—É—Ç—å_–∫_–∞—É–¥–∏–æ_—Ñ–∞–π–ª—É]');
            console.log('–ü—Ä–∏–º–µ—Ä: node index.js ./CAR0004.mp3');
            process.exit(1);
        }

        console.log('üéµ –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∞—É–¥–∏–æ —Ñ–∞–π–ª–æ–≤');
        console.log('========================');
        console.log(`üìÅ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º—ã–π —Ñ–∞–π–ª: ${audioFilePath}`);
        console.log('');

        // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
        const analyzer = new AudioAnalyzer();
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑
        await analyzer.analyzeAudio(audioFilePath);
        
        console.log('\n‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
        console.log('üìÇ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ output/');
        
    } catch (error) {
        console.error('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:', error.message);
        
        if (error.message.includes('API key')) {
            console.log('\nüí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Ñ–∞–π–ª .env —Å –≤–∞—à–∏–º OpenAI API –∫–ª—é—á–æ–º:');
            console.log('OPENAI_API_KEY=your_api_key_here');
        }
        
        process.exit(1);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
if (require.main === module) {
    main();
} 